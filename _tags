# OASIS_START
# DO NOT EDIT (digest: 291d2243dcbd22ef8cbed21bc7890e46)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library bin_prot
"lib/bin_prot.cmxs": use_bin_prot
"lib/binable.cmx": for-pack(Bin_prot)
"lib/nat0.cmx": for-pack(Bin_prot)
"lib/common.cmx": for-pack(Bin_prot)
"lib/unsafe_common.cmx": for-pack(Bin_prot)
"lib/unsafe_write_c.cmx": for-pack(Bin_prot)
"lib/unsafe_read_c.cmx": for-pack(Bin_prot)
"lib/size.cmx": for-pack(Bin_prot)
"lib/write_ml.cmx": for-pack(Bin_prot)
"lib/read_ml.cmx": for-pack(Bin_prot)
"lib/write_c.cmx": for-pack(Bin_prot)
"lib/read_c.cmx": for-pack(Bin_prot)
"lib/std.cmx": for-pack(Bin_prot)
"lib/type_class.cmx": for-pack(Bin_prot)
"lib/map_to_safe.cmx": for-pack(Bin_prot)
"lib/utils.cmx": for-pack(Bin_prot)
<lib/bin_prot.{cma,cmxa}>: use_libbin_prot_stubs
<lib/*.ml{,i}>: pkg_unix
<lib/*.ml{,i}>: pkg_bigarray
"lib/common_stubs.c": pkg_unix
"lib/common_stubs.c": pkg_bigarray
"lib/write_stubs.c": pkg_unix
"lib/write_stubs.c": pkg_bigarray
"lib/read_stubs.c": pkg_unix
"lib/read_stubs.c": pkg_bigarray
# Library pa_bin_prot
"syntax/pa_bin_prot.cmxs": use_pa_bin_prot
<syntax/*.ml{,i}>: pkg_camlp4.quotations
<syntax/*.ml{,i}>: pkg_camlp4.extend
<syntax/*.ml{,i}>: pkg_type_conv
# Executable test_runner
<lib_test/test_runner.{native,byte}>: use_bin_prot
<lib_test/test_runner.{native,byte}>: use_pa_bin_prot
<lib_test/test_runner.{native,byte}>: pkg_oUnit
<lib_test/test_runner.{native,byte}>: pkg_camlp4.quotations
<lib_test/test_runner.{native,byte}>: pkg_camlp4.extend
<lib_test/test_runner.{native,byte}>: pkg_type_conv
<lib_test/test_runner.{native,byte}>: pkg_unix
<lib_test/test_runner.{native,byte}>: pkg_bigarray
<lib_test/*.ml{,i}>: pkg_oUnit
<lib_test/test_runner.{native,byte}>: custom
# Executable mac_test
<lib_test/mac_test.{native,byte}>: use_bin_prot
<lib_test/mac_test.{native,byte}>: use_pa_bin_prot
<lib_test/mac_test.{native,byte}>: pkg_camlp4.quotations
<lib_test/mac_test.{native,byte}>: pkg_camlp4.extend
<lib_test/mac_test.{native,byte}>: pkg_type_conv
<lib_test/mac_test.{native,byte}>: pkg_unix
<lib_test/mac_test.{native,byte}>: pkg_bigarray
<lib_test/mac_test.{native,byte}>: custom
# Executable example
<lib_test/example.{native,byte}>: use_bin_prot
<lib_test/example.{native,byte}>: use_pa_bin_prot
<lib_test/example.{native,byte}>: pkg_camlp4.quotations
<lib_test/example.{native,byte}>: pkg_camlp4.extend
<lib_test/example.{native,byte}>: pkg_type_conv
<lib_test/example.{native,byte}>: pkg_unix
<lib_test/example.{native,byte}>: pkg_bigarray
<lib_test/*.ml{,i}>: use_bin_prot
<lib_test/*.ml{,i}>: use_pa_bin_prot
<lib_test/*.ml{,i}>: pkg_camlp4.quotations
<lib_test/*.ml{,i}>: pkg_camlp4.extend
<lib_test/*.ml{,i}>: pkg_type_conv
<lib_test/*.ml{,i}>: pkg_unix
<lib_test/*.ml{,i}>: pkg_bigarray
# OASIS_STOP
<lib/{size,write_ml,read_ml,unsafe_read_c,type_class}.ml{i,}>:cpp
<lib/{write,read}_ml.ml{,i}>:mlh
<lib_test/*.ml{,i}>: syntax_camlp4o,pkg_type_conv.syntax
<syntax/pa_bin_prot.ml>: syntax_camlp4o
